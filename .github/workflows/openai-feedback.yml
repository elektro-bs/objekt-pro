name: ChatGPT Commit-Zusammenfassung (Deutsch)

on:
  push:
    branches:
      - main

jobs:
  chatgpt-zusammenfassung:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Repository-Code abrufen
        uses: actions/checkout@v3

      - name: ðŸ§  Python & OpenAI & GitHub API installieren
        run: |
          python -m pip install --upgrade pip
          pip install openai PyGithub

      - name: ðŸ¤– ChatGPT analysiert Commit mit Dateien + Inhalt
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMIT_MSG=$(git log -1 --pretty=format:"%s")
          FILES_CHANGED=$(git diff-tree --no-commit-id --name-only -r HEAD)
          DIFF_INHALT=$(git diff HEAD^ HEAD)
          echo "Commit-Nachricht: $COMMIT_MSG"
          echo "GeÃ¤nderte Dateien:\n$FILES_CHANGED"

          echo """
  import os
  import openai
  from github import Github
  
  openai.api_key = os.getenv("OPENAI_API_KEY")
  commit_msg = os.getenv("COMMIT_MSG")
  files_changed = os.getenv("FILES_CHANGED")
  diff_content = os.getenv("DIFF_INHALT")
  repo_name = os.getenv("GITHUB_REPOSITORY")
  token = os.getenv("GITHUB_TOKEN")

prompt = f"Commit-Nachricht: {commit_msg}\n\nGeÃ¤nderte Dateien:\n{files_changed}\n\nCode-Ã„nderungen:\n{diff_content}\n\nBitte fasse die Ã„nderungen technisch sinnvoll zusammen, identifiziere mÃ¶gliche Risiken oder VerbesserungsvorschlÃ¤ge und schreibe alles auf Deutsch."
  
  antwort = openai.ChatCompletion.create(
  model="gpt-3.5-turbo",
  messages=[
  {"role": "system", "content": "Du bist ein professioneller Softwareentwickler. Antworte immer auf Deutsch."},
  {"role": "user", "content": prompt}
]
  )
  
  zusammenfassung = antwort["choices"][0]["message"]["content"]
  print("Antwort der KI:\n", zusammenfassung)

with open("KI-Feedback.md", "w") as f:
  f.write("# Automatische KI-Zusammenfassung zum letzten Commit\n\n")
  f.write(f"**Commit-Nachricht:** {commit_msg}\n\n")
  f.write(f"**GeÃ¤nderte Dateien:**\n{files_changed}\n\n")
  f.write(f"**Code-Ã„nderungen (Ausschnitt):**\n\n")
  f.write(diff_content[:3000])
  f.write("\n\n**ChatGPT-Analyse:**\n\n")
  f.write(zusammenfassung)
  
  changelog_text = f"\n\n## {commit_msg}\n\n{zusammenfassung}\n"
if os.path.exists("CHANGELOG.md"):
  with open("CHANGELOG.md", "r", encoding="utf-8") as changelog:
    existing = changelog.read()
else:
  existing = "# Ã„nderungsprotokoll\n"

with open("CHANGELOG.md", "w", encoding="utf-8") as changelog:
  changelog.write(existing.strip() + changelog_text)

try:
  github = Github(token)
  repo = github.get_repo(repo_name)
  pulls = repo.get_pulls(state="open")
  for pr in pulls:
    pr.create_issue_comment("ðŸ¤– Automatisierte KI-Zusammenfassung:\n\n" + zusammenfassung)
except Exception as e:
  print("Kein PR-Kommentar mÃ¶glich oder Fehler: ", e)
""" | python3
                                                  
                                                  - name: ðŸ“¤ Feedback-Dateien ins Repository hochladen
                                                  run: |
                                                  git config --global user.name "github-actions[bot]"
                                                  git config --global user.email "github-actions[bot]@users.noreply.github.com"
                                                  git add KI-Feedback.md CHANGELOG.md
                                                  git commit -m "ðŸ¤– KI-Zusammenfassung, PR-Kommentar & Changelog aktualisiert"
                                                  git push